/*
|--------------------------------------------------------------------------
| #BUTTONS
|--------------------------------------------------------------------------
*/




$sizes: 'large', 'small';

button,
.button {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: $gutter * .25 $gutter;
    color: color(white);
    line-height: $global-line-height;
    text-decoration: none;
    background: color(primary);
    border: solid 1px color(primary);
    border-radius: radius(small);
    cursor: pointer;
    transition: all .2s ease(inOutSine);

    &:hover {
        background: color(primary, light);
        border-color: color(primary, light);
    }
    
    &:active,
    &:focus {
        background: color(primary, dark);
        @include focus();
    }

    @each $size in $sizes {

        @if $size == 'large' {
            &.button-large {
                padding: $gutter * .45 $gutter * 1.15;
                font-size: ms(1);
            }
        }

        @if $size == 'small' {
            &.button-small {
                font-size: ms(-1);
            }
        }

    }

    &-wide {
        width: 100%;
    }

    @each $state in $states {

        &.button-#{$state} {
            @if $state == 'dark' {

                background: color(black);
                border-color: color(black);

                &:hover {
                    background: color(grey, 80);
                    border-color: color(grey, 80);
                }
                
                &:active,            
                &:focus {
                    @include focus(color(black));
                }

            } @elseif $state == 'light' {
                
                color: color(font);
                background: color(grey, 20);
                border-color: color(grey, 30);

                &:hover {
                    background: color(grey, 10);
                    border-color: color(grey, 20);
                }
                
                &:active,            
                &:focus {
                    background: color(grey, 20);
                    @include focus(color(grey, 30));
                }

            } @else {

                background: color(#{$state});
                border-color: color(#{$state});

                &:hover {
                    background: color(#{$state}, light);
                    border-color: color(#{$state}, light);
                }
                
                &:active,            
                &:focus {
                    background: color(#{$state}, dark);
                    @include focus(color(#{$state}));
                }

            }
        } 
    }

    &.button-outline {
        color: color(primary);
        background: transparent;
        border-color: color(primary, lighter);

        &:hover {
            background: color(primary, lightest);
            border-color: color(primary, light);
        }
        
        &:active,            
        &:focus {
            background: color(primary, lighter);
            @include focus(color(primary, light));
        }

        @each $state in $states {

            &.button-#{$state} {
                @if $state == 'dark' {
                    
                    color: color(black);
                    border-color: color(grey, 70);

                    &:hover {
                        background: color(grey, 30);
                        border-color: color(grey, 90);
                    }
                    
                    &:active,
                    &:focus {
                        background: color(grey, 50);
                        @include focus(color(black));
                    }

                } @elseif $state == 'light' {
                    
                    color: color(font);
                    border-color: color(grey, 30);

                    &:hover {
                        background: color(grey, 10);
                        border-color: color(grey, 20);
                    }
                    
                    &:active,
                    &:focus {
                        background: color(grey, 20);
                        @include focus(color(grey, 30));
                    }

                } @else {
                    color: color(#{$state});
                    border-color: color(#{$state}, lighter);

                    &:hover {
                        background: color(#{$state}, lightest);
                        border-color: color(#{$state}, light);
                    }
                    
                    &:active,
                    &:focus {
                        background: color(#{$state}, lighter);
                        @include focus(color(#{$state}, light));
                    }

                }
            } 
        }        
    }

    &.button-clear {
        background: transparent;
        border-color: transparent;
        color: color(primary);
    }

    &.has-icon {
        padding-left: $gutter * .25;
        padding-right: $gutter * .25;

        i,
        svg {
            height: 1rem;
            margin-left: $gutter;
        }

        i {

            svg {
                margin-left: 0;
            }
        }

        svg {
            vertical-align: middle;
            fill: currentColor;
        }
    }

    &.is-loading {
        color: transparent !important;

        &:after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            margin: -.5rem;
            height: 1rem;
            width: 1rem;
            border: .1rem solid color(white);
            border-right-color: transparent;
            border-top-color: transparent;
            border-radius: radius(circle);
            transform: translate(-50%, -50%);
            animation: rotate .5s infinite linear;
        }
    }
}




// #DISABLED
// =========================================================================

button[disabled],
.button[disabled] {
    background: color(grey, 20);
    color: color(grey, 30);
    border-color: color(grey, 30);
    cursor: not-allowed;
}





// #BUTTON GROUP
// =========================================================================

.button-group {
    display: flex;
    align-items: center;

    a,
    button,
    .button {
        margin-right: $gutter * .5;

        &:last-child {
            margin-right: 0;
        }
    }
}
